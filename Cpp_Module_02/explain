/*
Fixed number: 10.75
        _fractionalBits: 8
        _internal integer (_fixedPointValue): 2752

Binary (16 bits):

        Integer | Fraction
        00001010 | 11000000
          10        0.75

Conversion:
        - toFloat() -> 2752 / 256 = 10.75
        - toInt()   -> 2752 >> 8  = 10




Number: -10.743
    _fractionalBits: 8
    Step 1: Multiply by 256 -> -2748.608

Step 2: Round -> -2749
Step 3: Store as int (_fixedPointValue) -> -2749

Binary (16-bit two's complement):
    11110101.01001101  (-2749)

    toFloat() -> -2749 / 256 ≈ -10.7461
    toInt()   -> -2749 >> 8 ≈ -11

*/





BSP = A(0, 0)    B(4, 0)   C(0, 3)    P(1, 1)


        Area=0.5 * ​(x1​(y2​−y3​)+x2​(y3​−y1​)+x3​(y1​−y2​))



        MainArea = (0*(0-3) + 4*(3-0) + 0*(0-0)) * 0.5
         = (0 + 12 + 0) * 0.5
         = 6                                                      (ABC)

        area1 = (1*(0-3) + 4*(3-1) + 0*(1-0)) * 0.5
        = (-3 + 8 + 0) * 0.5
        = 5 * 0.5 = 2.5                                           (PBC)

        area2 = (0*(1-3) + 1*(3-0) + 0*(0-1)) * 0.5
         = (0 + 3 + 0) * 0.5
         = 1.5                                                    (APC) 

         area3 = (0*(0-1) + 4*(1-0) + 1*(0-0)) * 0.5
        = (0 + 4 + 0) * 0.5
         = 2                                                      (ABP)



        sum = area1 + area2 + area3
         = 2.5 + 1.5 + 2
         = 6 

        diff = |mainArea - sum| = |6 - 6| = 0     ( Since diff < epsilon(0.01), the function returns true.)
